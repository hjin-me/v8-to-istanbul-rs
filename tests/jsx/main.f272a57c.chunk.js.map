{
  "version": 3,
  "file": "main.f272a57c.chunk.js",
  "mappings": "gLAiBA,MAdcA,KACZ,GAAM,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACnC,MACEC,CAAAA,EAAAA,EAAAA,IAAAA,EAAAC,EAAAA,QAAA,EAAAC,SAAA,CACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEC,SAAUC,IACRP,EAASO,EAAEC,MAAM,CAACT,KAAK,CACzB,CAAE,GAEJG,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,KAAGO,UCXW,iBDWSL,SAAA,CAAC,SAAOL,EAAK,GAAK,EAG/C,E,8BEVO,OAAMW,EAKXC,YAAYC,CAAK,CAAE,CAAAC,IAAA,UAJdC,KAAKC,MAAM,IAAEF,IAAA,qBAAAA,IAAA,YAEX,IAGL,IAAI,CAACD,KAAK,CAAGA,EACbI,CAAAA,EAAAA,EAAAA,kBAAAA,EAAmB,IAAI,CACzB,CAEAC,QAAS,CAEP,IAAI,CAACC,IAAI,CAAG,CAAC,IAAI,CAACA,IAAI,CAE1B,CAEO,MAAMC,EAGX,IAAIC,qBAAsB,CACxB,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,GAAQ,CAACA,EAAKL,IAAI,EAAEM,MAAM,CAGrDb,aAAc,CAAAE,IAAA,aANN,EAAE,EAORG,CAAAA,EAAAA,EAAAA,kBAAAA,EAAmB,IAAI,CACzB,CAEAS,QAAQb,CAAK,CAAE,CAEb,IAAI,CAACS,KAAK,CAACK,IAAI,CAAC,IAAIhB,EAAUE,GAChC,CACF,CChCA,IAAMe,EAAOC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAAC,CAAEL,KAAAA,CAAK,CAAC,GAC7BrB,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,MAAAE,SAAA,CACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SACEwB,KAAK,WACLC,QAASP,EAAKL,IAAK,CACnBZ,SAAUA,KACRiB,EAAKN,MAAM,EACb,CAAE,GAEHM,EAAKX,KAAK,KAITmB,EAAWH,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,KACxB,GAAM,CAACI,EAAS,CAAG/B,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAM,IAAIkB,GACtC,MACEjB,CAAAA,EAAAA,EAAAA,IAAAA,EAAAC,EAAAA,QAAA,EAAAC,SAAA,CACEF,CAAAA,EAAAA,EAAAA,IAAAA,EAAA,QACE+B,SAAU1B,IACRA,EAAE2B,cAAc,GAChBF,EAASP,OAAO,CAAClB,EAAEC,MAAM,CAACe,IAAI,CAACxB,KAAK,CACtC,EAAEK,SAAA,CACH,aACWC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,SAAOwB,KAAK,OAAOM,KAAK,MAAM,GAAG,IAAC9B,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,UAAQwB,KAAK,SAAQzB,SAAC,KAAG,GAAS,GAEhFC,CAAAA,EAAAA,EAAAA,GAAAA,EAAA,MAAAD,SACG4B,EAASX,KAAK,CAACe,GAAG,CAACb,GAClBlB,CAAAA,EAAAA,EAAAA,GAAAA,EAACsB,EAAI,CAACJ,KAAMA,CAAK,EAAMA,EAAKc,EAAK,EACjC,GACC,eACQL,EAASZ,mBAAmB,GAG/C,GCvBAkB,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,SAASC,aAAa,CAAC,UAAUC,MAAM,CAChDpC,CAAAA,EAAAA,EAAAA,GAAAA,EAACqC,EAAAA,UAAU,EAAAtC,SACTC,CAAAA,EAAAA,EAAAA,GAAAA,ECbQsC,IACVzC,CAAAA,EAAAA,EAAAA,IAAAA,EAAAC,EAAAA,QAAA,EAAAC,SAAA,CACEC,CAAAA,EAAAA,EAAAA,GAAAA,EAACP,EAAK,IACNO,CAAAA,EAAAA,EAAAA,GAAAA,EFiCW0B,EEjCF,IAAG,GDUR,GAAG,G",
  "sources": [
    "./src/Hello.js",
    "webpack://react_template/./src/Hello.module.less?1c69",
    "./src/TodoList/model.js",
    "./src/TodoList/index.js",
    "./src/index.js",
    "./src/App.js"
  ],
  "sourcesContent": [
    "import { useState } from 'react'\nimport styles from './Hello.module.less'\n\nconst Hello = () => {\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <input\n        onChange={e => {\n          setValue(e.target.value)\n        }}\n      />\n      <p className={styles.p}>hello {value}</p>\n    </>\n  )\n}\n\nexport default Hello\n",
    "// extracted by mini-css-extract-plugin\nexport default {\"p\":\"Hello_p__hiSbQ\"};",
    "import { makeAutoObservable } from 'mobx'\nimport Debug from 'debug'\n\nconst debug = Debug('TodoList:model')\n\nexport class TodoModel {\n  id = Math.random()\n  title\n  done = false\n\n  constructor(title) {\n    this.title = title\n    makeAutoObservable(this)\n  }\n\n  toggle() {\n    debug('toggle')\n    this.done = !this.done\n  }\n}\n\nexport class TodoListModel {\n  todos = []\n\n  get unfinishedTodoCount() {\n    return this.todos.filter(todo => !todo.done).length\n  }\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  addTodo(title) {\n    debug('addTodo', title)\n    this.todos.push(new TodoModel(title))\n  }\n}\n",
    "import { useState } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { TodoListModel } from './model'\n\nconst Todo = observer(({ todo }) => (\n  <li>\n    <input\n      type=\"checkbox\"\n      checked={todo.done}\n      onChange={() => {\n        todo.toggle()\n      }}\n    />\n    {todo.title}\n  </li>\n))\n\nconst TodoList = observer(() => {\n  const [todoList] = useState(() => new TodoListModel())\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          todoList.addTodo(e.target.todo.value)\n        }}\n      >\n        New Todo: <input type=\"text\" name=\"todo\" /> <button type=\"submit\">Add</button>\n      </form>\n      <ul>\n        {todoList.todos.map(todo => (\n          <Todo todo={todo} key={todo.id} />\n        ))}\n      </ul>\n      Tasks left: {todoList.unfinishedTodoCount}\n    </>\n  )\n})\n\nexport default TodoList\n",
    "import './polyfills'\nimport { configure } from 'mobx'\nimport { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App'\n\nif (process.env.NODE_ENV === 'development') {\n  configure({\n    computedRequiresReaction: true,\n    observableRequiresReaction: true,\n    reactionRequiresObservable: true,\n  })\n}\n\ncreateRoot(document.querySelector('#root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n",
    "import Hello from './Hello'\nimport TodoList from './TodoList'\n\nconst App = () => (\n  <>\n    <Hello />\n    <TodoList />\n  </>\n)\n\nexport default App\n"
  ],
  "names": [
    "Hello",
    "value",
    "setValue",
    "useState",
    "_jsxs",
    "_Fragment",
    "children",
    "_jsx",
    "onChange",
    "e",
    "target",
    "className",
    "TodoModel",
    "constructor",
    "title",
    "_defineProperty",
    "Math",
    "random",
    "makeAutoObservable",
    "toggle",
    "done",
    "TodoListModel",
    "unfinishedTodoCount",
    "todos",
    "filter",
    "todo",
    "length",
    "addTodo",
    "push",
    "Todo",
    "observer",
    "type",
    "checked",
    "TodoList",
    "todoList",
    "onSubmit",
    "preventDefault",
    "name",
    "map",
    "id",
    "createRoot",
    "document",
    "querySelector",
    "render",
    "StrictMode",
    "App"
  ],
  "sourceRoot": ""
}
